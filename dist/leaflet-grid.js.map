{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cd591fc1708a8171fca0","webpack:///external \"leaflet\"","webpack:///external \"d3-array\"","webpack:///./src/grid/Celda.ts","webpack:///./src/grid/Malla.ts","webpack:///./src/grid/MallaEscalar.ts","webpack:///./src/grid/Vector.ts","webpack:///./src/layer/L.CanvasLayer.Malla.ts","webpack:///external \"leaflet-canvas-layer\"","webpack:///./src/LeafletGrid.ts","webpack:///./src/control/L.Control.ColorBar.ts","webpack:///external \"d3-scale\"","webpack:///external \"d3-selection\"","webpack:///external \"geotiff\"","webpack:///./src/grid/MallaVectorial.ts","webpack:///./src/layer/L.CanvasLayer.MallaEscalar.ts","webpack:///external \"chroma-js\"","webpack:///./src/colorscale/L.ColorScale.ts","webpack:///./src/layer/L.CanvasLayer.MallaVectorial.ts","webpack:///external \"d3-timer\"","webpack:///./src/layer/L.CanvasLayer.PuntosMalla.ts"],"names":[],"mappings":"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","file":"leaflet-grid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"leaflet\"), require(\"leaflet-canvas-layer\"), require(\"d3-timer\"), require(\"chroma-js\"), require(\"d3-array\"), require(\"geotiff\"), require(\"d3-scale\"), require(\"d3-selection\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"leaflet\", \"leaflet-canvas-layer\", \"d3-timer\", \"chroma-js\", \"d3-array\", \"geotiff\", \"d3-scale\", \"d3-selection\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"leaflet\"), require(\"leaflet-canvas-layer\"), require(\"d3-timer\"), require(\"chroma-js\"), require(\"d3-array\"), require(\"geotiff\"), require(\"d3-scale\"), require(\"d3-selection\")) : factory(root[\"leaflet\"], root[\"leaflet-canvas-layer\"], root[\"d3-timer\"], root[\"chroma-js\"], root[\"d3-array\"], root[\"geotiff\"], root[\"d3-scale\"], root[\"d3-selection\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cd591fc1708a8171fca0","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"leaflet\"\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3-array\"\n// module id = 1\n// module chunks = 0","/**\n *  Simple regular cell in a raster\n */\nimport { LatLng, latLng, latLngBounds, LatLngBounds } from 'leaflet'\nimport { Vector } from './Vector'\n\nexport interface ISizeCelda {\n    x: number,\n    y: number\n}\n\nexport class Celda<T extends number | Vector> {\n\n    private _center: LatLng\n    private _size: ISizeCelda\n    private _value: T\n\n    /**\n     * A simple cell with value and size\n     * @param {L.LatLng} center\n     * @param {Number} value\n     * @param {Number} size\n     */\n    constructor(center: LatLng, value: T, size: ISizeCelda) {\n        this._center = center\n        this._value = value\n        this._size = size\n    }\n\n    public get center(): LatLng { return this._center }\n    public set center(center: LatLng) { this._center = center }\n    public get value(): T { return this._value }\n    public set value(value: T) { this._value = value }\n\n    public equals(anotherCell: Celda<T>) {\n        return (this.center.equals(anotherCell.center) &&\n            this._equalValues(this.value, anotherCell.value) &&\n            this._size === anotherCell._size\n        )\n    }\n\n    /**\n     * Bounds for the cell\n     * @returns {LatLngBounds}\n     */\n    public getBounds(): LatLngBounds {\n        const [halfx, halfy] = [this._size.x / 2.0, this._size.y / 2.0]\n        const cLat = this.center.lat\n        const cLng = this.center.lng\n        const ul = new LatLng(cLat + halfy, cLng - halfx)\n        const lr = new LatLng(cLat - halfy, cLng + halfx)\n\n        return latLngBounds(latLng(lr.lat, ul.lng), latLng(ul.lat, lr.lng))\n    }\n\n    private _equalValues(value: T, anotherValue: T): boolean {\n        const type: string = (value.constructor.name)\n        const answerFor: { [x: string]: boolean } = {\n            number: (value === anotherValue),\n            Vector: ((value as Vector).u === (anotherValue as Vector).u &&\n                (value as Vector).v === (anotherValue as Vector).v)\n        }\n        return answerFor[type]\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/grid/Celda.ts","import { LatLng, LatLngBounds } from 'leaflet'\nimport { Celda, ISizeCelda } from './Celda'\nimport { Vector } from './Vector'\n\nexport interface IMallaParams {\n    cellSize: ISizeCelda,\n    nCols: number,\n    nRows: number,\n    xllCorner: number,\n    yllCorner: number\n}\n\n/**\n *  Abstract class for a set of values (Vector | Scalar)\n *  assigned to a regular 2D-grid (lon-lat), aka 'a Raster source'\n */\nexport abstract class Malla<T extends number | Vector> {\n    public isContinuous: boolean\n    public longitudeNeedsToBeWrapped: any\n    public _inFilter: any\n\n    protected grid: T[][]\n    protected defMalla: IMallaParams\n    protected _range: any\n\n    constructor(params: IMallaParams) {\n        this.defMalla = params\n\n        this.grid = null // to be defined by subclasses\n        this.isContinuous = this.xurCorner - this.defMalla.xllCorner >= 360\n        this.longitudeNeedsToBeWrapped = this.xurCorner > 180 // [0, 360] --> [-180, 180]\n\n        this._inFilter = null\n    }\n\n    public get cellSize() { return this.defMalla.cellSize }\n    public get nCols() { return this.defMalla.nCols }\n    public get nRows() { return this.defMalla.nRows }\n    public get xllCorner() { return this.defMalla.xllCorner }\n    public get yllCorner() { return this.defMalla.yllCorner }\n    public get range() { return this._range }\n\n    // alias\n    public get height() { return this.nRows }\n    public get width() { return this.nCols }\n\n    // corresponding corners\n    public get xurCorner() { return this.defMalla.xllCorner + this.defMalla.nCols * this.defMalla.cellSize.x }\n    public get yurCorner() { return this.defMalla.yllCorner + this.defMalla.nRows * this.defMalla.cellSize.y }\n\n    /**\n     * Number of cells in the grid (rows * cols)\n     * @returns {Number}\n     */\n    public numCells(): number {\n        return this.defMalla.nRows * this.defMalla.nCols\n    }\n\n    public getBounds(): LatLngBounds {\n        return new LatLngBounds([[this.defMalla.yllCorner, this.defMalla.xllCorner], [this.yurCorner, this.xurCorner]])\n    }\n\n    /**\n     * A list with every cell\n     * @returns {Array<Cell>} - cells (x-ascending & y-descending order)\n     */\n    public getCells(stride = 1): Array<Celda<number | Vector>> {\n        const cells: Array<Celda<T>> = []\n        for (let j = 0; j < this.defMalla.nRows; j = j + stride) {\n            for (let i = 0; i < this.defMalla.nCols; i = i + stride) {\n                const [lon, lat] = this.lonLatAtIndexes(i, j)\n                const center = new LatLng(lat, lon)\n                const value = this._valueAtIndexes(i, j)\n                const c = new Celda<T>(center, value, this.defMalla.cellSize)\n                cells.push(c) // <<\n            }\n        }\n        return cells\n    }\n\n    /**\n     * Apply a filter function to field values\n     * @param   {Function} f - boolean function\n     */\n    public setFilter(f: any): void {\n        this._inFilter = f\n        this._updateRange()\n    }\n\n    /**\n     * Grid extent\n     * @returns {Number[]} [xmin, ymin, xmax, ymax]\n     */\n    public extent(): number[] {\n        const [xmin, xmax] = this._getWrappedLongitudes()\n        return [xmin, this.defMalla.yllCorner, xmax, this.yurCorner]\n    }\n\n    /**\n     * Returns whether or not the grid contains the point\n     * @param   {Number} lon - longitude\n     * @param   {Number} lat - latitude\n     * @returns {Boolean}\n     */\n    public contains(lon: number, lat: number): boolean {\n        const [xmin, xmax] = this._getWrappedLongitudes()\n\n        // let longitudeIn = this.isContinuous ? true : (lon >= xmin && lon <= xmax)\n        const longitudeIn = lon >= xmin && lon <= xmax\n        const latitudeIn = lat >= this.defMalla.yllCorner && lat <= this.yurCorner\n\n        return longitudeIn && latitudeIn\n    }\n\n    /**\n     * Nearest value at lon-lat coordinates\n     * @param   {Number} longitude\n     * @param   {Number} latitude\n     * @returns {Vector|Number}\n     */\n    public valueAt(lon: number, lat: number): T {\n        if (this.notContains(lon, lat)) { return null }\n\n        const [i, j] = this._getDecimalIndexes(lon, lat)\n        const ii = Math.floor(i)\n        const jj = Math.floor(j)\n\n        const value = this._valueAtIndexes(ii, jj)\n        if (this._inFilter) {\n            if (!this._inFilter(value)) { return null }\n        }\n        return value\n    }\n\n    /**\n     * Returns if the grid doesn't contain the point\n     * @param   {Number} lon - longitude\n     * @param   {Number} lat - latitude\n     * @returns {Boolean}\n     */\n    public notContains(lon: number, lat: number): boolean {\n        return !this.contains(lon, lat)\n    }\n\n    /**\n     * Interpolated value at lon-lat coordinates (bilinear method)\n     * @param   {Number} longitude\n     * @param   {Number} latitude\n     * @returns {Vector|Number} [u, v, magnitude]\n     * Source: https://github.com/cambecc/earth > product.js\n     */\n    public interpolatedValueAt(lon: number, lat: number): T {\n        if (this.notContains(lon, lat)) { return null }\n\n        const [i, j] = this._getDecimalIndexes(lon, lat)\n        return this.interpolatedValueAtIndexes(i, j)\n    }\n\n    /**\n     * Interpolated value at i-j indexes (bilinear method)\n     * @param   {Number} i\n     * @param   {Number} j\n     * @returns {Vector|Number} [u, v, magnitude]\n     *\n     * Source: https://github.com/cambecc/earth > product.js\n     */\n    public interpolatedValueAtIndexes(i: number, j: number): T {\n        //         1      2           After converting λ and φ to fractional grid indexes i and j, we find the\n        //        fi  i   ci          four points 'G' that enclose point (i, j). These points are at the four\n        //         | =1.4 |           corners specified by the floor and ceiling of i and j. For example, given\n        //      ---G--|---G--- fj 8   i = 1.4 and j = 8.3, the four surrounding grid points are (1, 8), (2, 8),\n        //    j ___|_ .   |           (1, 9) and (2, 9).\n        //  =8.3   |      |\n        //      ---G------G--- cj 9   Note that for wrapped grids, the first column is duplicated as the last\n        //         |      |           column, so the index ci can be used without taking a modulo.\n\n        const indexes = this._getFourSurroundingIndexes(i, j)\n        const [fi, ci, fj, cj] = indexes\n        const values = this._getFourSurroundingValues(fi, ci, fj, cj)\n        if (values) {\n            const [g00, g10, g01, g11] = values\n            return this._doInterpolation(i - fi, j - fj, g00, g10, g01, g11)\n        }\n        return null\n    }\n\n    /**\n     * Returns whether or not the field has a value at the point\n     * @param   {Number} lon - longitude\n     * @param   {Number} lat - latitude\n     * @returns {Boolean}\n     */\n    public hasValueAt(lon: number, lat: number): boolean {\n        const value = this.valueAt(lon, lat)\n        const hasValue = value !== null\n\n        let included = true\n        if (this._inFilter) {\n            included = this._inFilter(value)\n        }\n        return hasValue && included\n    }\n\n    /**\n     * Gives a random position to 'o' inside the grid\n     * @param {Object} [o] - an object (eg. a particle)\n     * @returns {{x: Number, y: Number}} - object with x, y (lon, lat)\n     */\n    public randomPosition(o?: any): { x: number, y: number } {\n        const i = (Math.random() * this.defMalla.nCols) || 0\n        const j = (Math.random() * this.defMalla.nRows) || 0\n        const res: { x: number, y: number } = { x: 0, y: 0 }\n        res.x = this._longitudeAtX(i)\n        res.y = this._latitudeAtY(j)\n\n        if (o) {\n            o.x = res.x\n            o.y = res.y\n        }\n\n        return res\n    }\n\n    /**\n     * Lon-Lat for grid indexes\n     * @param   {Number} i - column index (integer)\n     * @param   {Number} j - row index (integer)\n     * @returns {Number[]} [lon, lat]\n     */\n    public lonLatAtIndexes(i: number, j: number): number[] {\n        const lon = this._longitudeAtX(i)\n        const lat = this._latitudeAtY(j)\n\n        return [lon, lat]\n    }\n\n    /**\n     * Builds a grid with a value at each point (either Vector or Number)\n     * Original params must include the required input values, following\n     * x-ascending & y-descending order (same as in ASCIIGrid)\n     * @abstract\n     * @private\n     * @returns {Array.<Array.<Vector|Number>>} - grid[row][column]--> Vector|Number\n     */\n    protected abstract _buildGrid(): T[][]\n    protected abstract _calculateRange(): number[]\n    /**\n     * Apply the interpolation\n     * @abstract\n     * @private\n     */\n    protected abstract _doInterpolation(x: number, y: number, g00: T, g10: T, g01: T, g11: T): T\n\n    protected _updateRange(): void {\n        this._range = this._calculateRange()\n    }\n\n    /**\n     * Is valid (not 'null' nor 'undefined')\n     * @private\n     * @param   {Object} x object\n     * @returns {Boolean}\n     */\n    protected _isValid(x: any): boolean {\n        return x !== null && x !== undefined\n    }\n\n    /**\n     * [xmin, xmax] in [-180, 180] range\n     */\n    private _getWrappedLongitudes(): number[] {\n        let xmin = this.defMalla.xllCorner\n        let xmax = this.xurCorner\n\n        if (this.longitudeNeedsToBeWrapped) {\n            if (this.isContinuous) {\n                xmin = -180\n                xmax = 180\n            } else {\n                // not sure about this (just one particular case, but others...?)\n                xmax = this.xurCorner - 360\n                xmin = this.defMalla.xllCorner - 360\n                /* eslint-disable no-console */\n                // console.warn(`are these xmin: ${xmin} & xmax: ${xmax} OK?`)\n                // TODO: Better throw an exception on no-controlled situations.\n                /* eslint-enable no-console */\n            }\n        }\n        return [xmin, xmax]\n    }\n\n    /**\n     * Get decimal indexes, clampling on borders\n     * @private\n     * @param {Number} lon\n     * @param {Number} lat\n     * @returns {Array}    [[Description]]\n     */\n    private _getDecimalIndexes(lon: number, lat: number): number[] {\n        if (this.longitudeNeedsToBeWrapped) {\n            if (lon < 0) {\n                lon = lon + 360\n            }\n        }\n        const ii = (lon - this.defMalla.xllCorner) / this.defMalla.cellSize.x\n        const i = this._clampColumnIndex(ii)\n\n        const jj = (this.yurCorner - lat) / this.defMalla.cellSize.y\n        const j = this._clampRowIndex(jj)\n\n        return [i, j]\n    }\n\n    /**\n     * Get surrounding indexes (integer), clampling on borders\n     * @private\n     * @param   {Number} i - decimal index\n     * @param   {Number} j - decimal index\n     * @returns {Array} [fi, ci, fj, cj]\n     */\n    private _getFourSurroundingIndexes(i: number, j: number): number[] {\n        const fi = this._clampColumnIndex(Math.floor(i))\n        const ci = this._clampColumnIndex(fi + 1)\n        const fj = this._clampRowIndex(Math.floor(j))\n        const cj = this._clampRowIndex(fj + 1)\n        // console.log(fi, ci, fj, cj)\n        return [fi, ci, fj, cj]\n    }\n\n    /**\n     * Get four surrounding values or null if not available,\n     * from 4 integer indexes\n     * @private\n     * @param   {Number} fi\n     * @param   {Number} ci\n     * @param   {Number} fj\n     * @param   {Number} cj\n     * @returns {Array}\n     */\n    private _getFourSurroundingValues(fi: number, ci: number, fj: number, cj: number): T[] {\n        let row = this.grid[fj]\n        if (row) {\n            // upper row ^^\n            const g00 = row[fi] // << left\n            const g10 = row[ci] // right >>\n            row = this.grid[cj]\n            if (\n                this._isValid(g00) &&\n                this._isValid(g10) &&\n                row\n            ) {\n                // lower row vv\n                const g01 = row[fi] // << left\n                const g11 = row[ci] // right >>\n                if (this._isValid(g01) && this._isValid(g11)) {\n                    return [g00, g10, g01, g11] // 4 values found!\n                }\n            }\n        }\n        return null\n    }\n\n    /**\n     * Value for grid indexes\n     * @param   {Number} i - column index (integer)\n     * @param   {Number} j - row index (integer)\n     * @returns {Vector|Number}\n     */\n    private _valueAtIndexes(i: number, j: number): T {\n        return this.grid[j][i] // <-- j,i !!\n    }\n\n    /**\n     * Longitude for grid-index\n     * @param   {Number} i - column index (integer)\n     * @returns {Number} longitude at the center of the cell\n     */\n    private _longitudeAtX(i: number): number {\n        const halfPixel = this.defMalla.cellSize.x / 2.0\n        let lon = this.defMalla.xllCorner + halfPixel + i * this.defMalla.cellSize.x\n        if (this.longitudeNeedsToBeWrapped) {\n            lon = lon > 180 ? lon - 360 : lon\n        }\n        return lon\n    }\n\n    /**\n     * Latitude for grid-index\n     * @param   {Number} j - row index (integer)\n     * @returns {Number} latitude at the center of the cell\n     */\n    private _latitudeAtY(j: number): number {\n        const halfPixel = this.defMalla.cellSize.y / 2.0\n        return this.yurCorner - halfPixel - j * this.defMalla.cellSize.y\n    }\n\n    /**\n     * Check the column index is inside the field,\n     * adjusting to min or max when needed\n     * @private\n     * @param   {Number} ii - index\n     * @returns {Number} i - inside the allowed indexes\n     */\n    private _clampColumnIndex(ii: number): number {\n        let i = ii\n        if (ii < 0) {\n            i = 0\n        }\n        const maxCol = this.defMalla.nCols - 1\n        if (ii > maxCol) {\n            i = this.isContinuous ? 0 : maxCol // duplicate first column when raster is continuous\n        }\n        return i\n    }\n\n    /**\n     * Check the row index is inside the field,\n     * adjusting to min or max when needed\n     * @private\n     * @param   {Number} jj index\n     * @returns {Number} j - inside the allowed indexes\n     */\n    private _clampRowIndex(jj: number): number {\n        let j = jj\n        if (jj < 0) {\n            j = 0\n        }\n        const maxRow = this.defMalla.nRows - 1\n        if (jj > maxRow) {\n            j = maxRow\n        }\n        return j\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/grid/Malla.ts","// tslint:disable-next-line:no-reference\n///<reference path='../geotiff/geotiff.d.ts'/>\n\nimport { max, min } from 'd3-array'\nimport { IMallaParams, Malla } from './Malla'\n\nimport { GeoTIFF } from 'geotiff'\n\nexport interface IMallaEscalarParams extends IMallaParams {\n    zs?: number[]\n}\n\n/**\n * Scalar Field\n */\nexport class MallaEscalar extends Malla<number> {\n\n    public static fromData(def: IMallaParams, datos: any, nomeVar: string = 'c'): MallaEscalar {\n\n        const values: number[] = datos.map((it: any) => it[nomeVar])\n\n        const p: IMallaEscalarParams = def\n        p.zs = values\n        return new MallaEscalar(p)\n\n    }\n    /**\n     * Creates a ScalarField from the content of an ASCIIGrid file\n     * @param   {String}   asc\n     * @returns {ScalarField}\n     */\n    public static fromASCIIGrid(asc: string, scaleFactor = 1) {\n        // console.time('ScalarField from ASC')\n\n        const lines = asc.split('\\n')\n\n        // Header\n        MallaEscalar._checkIsValidASCIIGridHeader(lines)\n\n        const n = /-?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/ // any number\n        const p: IMallaEscalarParams = {\n            cellSize: { x: parseFloat(lines[4].match(n).toString()), y: parseFloat(lines[4].match(n).toString()) },\n            nCols: parseInt(lines[0].match(n).toString(), 10),\n            nRows: parseInt(lines[1].match(n).toString(), 10),\n            xllCorner: parseFloat(lines[2].match(n).toString()),\n            yllCorner: parseFloat(lines[3].match(n).toString()),\n        }\n        const noDataValue = lines[5]\n            .toUpperCase()\n            .replace('NODATA_VALUE', '')\n            .trim()\n\n        // Data (left-right and top-down)\n        const zs: number[] = [] // TODO Consider using TypedArray (& manage NO_DATA)\n        for (let i = 6; i < lines.length; i++) {\n            const line = lines[i].trim()\n            if (line === '') { break }\n\n            const items = line.split(' ')\n            const values = items.map((it) => {\n                return it !== noDataValue ? parseFloat(it) * scaleFactor : null\n            })\n            zs.push(...values)\n        }\n        p.zs = zs\n\n        // console.timeEnd('ScalarField from ASC')\n        return new MallaEscalar(p)\n    }\n\n    /**\n     * Creates a ScalarField from the content of a GeoTIFF file, as read by geotiff.js\n     * @param   {ArrayBuffer}   data\n     * @param   {Number}   bandIndex\n     * @returns {ScalarField}\n     */\n    public static fromGeoTIFF(data: any, bandIndex = 0) {\n        // console.time('ScalarField from GeoTIFF')\n\n        const tiff = GeoTIFF.parse(data) // geotiff.js\n        const image = tiff.getImage()\n        const rasters = image.readRasters()\n        const tiepoint = image.getTiePoints()[0]\n        const fileDirectory = image.getFileDirectory()\n        const pixelScale = fileDirectory.ModelPixelScale\n\n        // Check \"Not supported raster\"\n        const [xScale, yScale] = pixelScale\n        if (xScale !== yScale) {\n            throw new Error(`GeoTIFF with different scale in x: ${xScale} y: ${yScale} is not currently supported\n            \\nMake sure the difference is just a floating precission issue`)\n        }\n\n        let _zs = rasters[bandIndex] // left-right and top-down order\n\n        if (fileDirectory.GDAL_NODATA) {\n            const noData = parseFloat(fileDirectory.GDAL_NODATA)\n            // console.log(noData)\n            const simpleZS = Array.from(_zs) // to simple array, so null is allowed | TODO efficiency??\n            _zs = simpleZS.map((z) => {\n                return z === noData ? null : z\n            })\n        }\n\n        const p = {\n            cellSize: pixelScale[0],\n            nCols: image.getWidth(),\n            nRows: image.getHeight(),\n            xllCorner: tiepoint.x,\n            yllCorner: tiepoint.y - image.getHeight() * pixelScale[0],\n            zs: _zs\n        }\n\n        // console.timeEnd('ScalarField from GeoTIFF')\n        return new MallaEscalar(p)\n    }\n\n    private static _checkIsValidASCIIGridHeader(lines: string[]) {\n        const upperCasesLines = lines.map((lin) => lin.toUpperCase())\n\n        const parameters = [\n            'NCOLS',\n            'NROWS',\n            'XLLCORNER',\n            'YLLCORNER',\n            'CELLSIZE',\n            'NODATA_VALUE'\n        ]\n\n        let i = 0\n        for (const expected of parameters) {\n            const line = upperCasesLines[i]\n            const found = line.indexOf(expected) !== -1\n            if (!found) {\n                throw new Error(`Not valid ASCIIGrid: expected '${expected}' at line '${line}' [lin. nº ${i}]`)\n            }\n            i++\n        }\n    }\n\n    private _zs: number[]\n\n    constructor(params: any) {\n        super(params)\n        this._zs = params.zs\n\n        this.grid = this._buildGrid()\n        this._updateRange()\n        // console.log(`ScalarField created (${this.nCols} x ${this.nRows})`)\n    }\n\n    public get zs() { return this._zs }\n\n    public updateData(datos: any, nomeVar: string) {\n        const values: number[] = datos.map((it: any) => it[nomeVar])\n        this._zs = values\n        this.grid = this._buildGrid()\n        this._updateRange()\n    }\n\n    /**\n     * Builds a grid with a Number at each point, from an array\n     * 'zs' following x-ascending & y-descending order\n     * (same as in ASCIIGrid)\n     * @private\n     * @returns {Array.<Array.<Number>>} - grid[row][column]--> Number\n     */\n    protected _buildGrid() {\n        const grid = this._arrayTo2d(this.zs, this.nRows, this.nCols)\n        return grid\n    }\n\n    /**\n     * Calculate min & max values\n     * @private\n     * @returns {Array} - [min, max]\n     */\n    protected _calculateRange(): number[] {\n        let data: number[] = this.zs\n        if (this._inFilter) {\n            data = data.filter(this._inFilter)\n        }\n        return [min(data), max(data)]\n    }\n\n    /**\n     * Bilinear interpolation for Number\n     * https://en.wikipedia.org/wiki/Bilinear_interpolation\n     * @param   {Number} x\n     * @param   {Number} y\n     * @param   {Number} g00\n     * @param   {Number} g10\n     * @param   {Number} g01\n     * @param   {Number} g11\n     * @returns {Number}\n     */\n    protected _doInterpolation(x: number, y: number, g00: number, g10: number, g01: number, g11: number): number {\n        const rx = 1 - x\n        const ry = 1 - y\n        return g00 * rx * ry + g10 * x * ry + g01 * rx * y + g11 * x * y\n    }\n\n    private _arrayTo2d(array: any, nRows: number, nCols: number) {\n        const grid = []\n        let p = 0\n        for (let j = 0; j < nRows; j++) {\n            const row = []\n            for (let i = 0; i < nCols; i++ , p++) {\n                const z = array[p]\n                row[i] = this._isValid(z) ? z : null // <<<\n            }\n            grid[j] = row\n        }\n        return grid\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/grid/MallaEscalar.ts","/**\n *  2D Vector\n */\nexport class Vector {\n    private _u: number\n    private _v: number\n\n    constructor(u: number, v: number) {\n        this._u = u\n        this._v = v\n    }\n\n    public get u(): number { return this._u }\n    public get v(): number { return this._v }\n\n    /**\n     * Magnitude\n     * @returns {Number}\n     */\n    public magnitude(): number {\n        return Math.sqrt(this.u * this.u + this.v * this.v)\n    }\n\n    /**\n     * Angle in degrees (0 to 360º) --> Towards\n     * N is 0º and E is 90º\n     * @returns {Number}\n     */\n    public directionTo(): number {\n        const verticalAngle = Math.atan2(this.u, this.v)\n        let inDegrees = verticalAngle * (180.0 / Math.PI)\n        if (inDegrees < 0) {\n            inDegrees = inDegrees + 360.0\n        }\n        return inDegrees\n    }\n\n    /**\n     * Angle in degrees (0 to 360º) From x-->\n     * N is 0º and E is 90º\n     * @returns {Number}\n     */\n    public directionFrom(): number {\n        const a = this.directionTo()\n        const opposite = (a + 180.0) % 360.0\n        return opposite\n    }\n\n    /*\n        Degrees --> text\n        new Dictionary<int, string>\n        {\n            //{0, 23, 45, 68, 90, 113, 135, 158, 180, 203, 225, 248, 270, 293, 315, 338, 360}\n            {0, 'N'},\n            {23, 'NNE'},\n            {45, 'NE'},\n            {68, 'ENE'},\n            {90, 'E'},\n            {113, 'ESE'},\n            {135, 'SE'},\n            {158, 'SSE'},\n            {180, 'S'},\n            {203, 'SSW'},\n            {225, 'SW'},\n            {248, 'WSW'},\n            {270, 'W'},\n            {293, 'WNW'},\n            {315, 'NW'},\n            {338, 'NNW'},\n            {360, 'N'}\n        }\n    */\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/grid/Vector.ts","/**\n * Abstract class for a Field layer on canvas, aka 'a Raster layer'\n * (ScalarField or a VectorField)\n */\nimport { DomUtil, LatLng, LatLngBounds, LayerOptions, LeafletEventHandlerFn, LeafletMouseEvent, Util } from 'leaflet'\nimport { CanvasLayer } from 'leaflet-canvas-layer'\nimport { Malla } from '../grid/Malla'\nimport { Vector } from '../grid/Vector'\n\nexport abstract class CanvasLayerMalla<T extends number | Vector> extends CanvasLayer {\n    protected _onClickO: LeafletEventHandlerFn\n    protected _inFilterO: any\n    protected _onMouseMoveO: LeafletEventHandlerFn\n\n    protected _options: { [x: string]: any } = {\n        inFilter: this._inFilterO,\n        mouseMoveCursor: {\n            noValue: 'default',\n            value: 'pointer'\n        },\n        onClick: this._onClick,\n        onMouseMove: this._onMouseMoveO,\n        opacity: 1\n    }\n\n    protected _malla: Malla<T>\n    protected _visible: boolean\n\n    constructor(malla: Malla<T>, options?: LayerOptions) {\n        super(options)\n        Util.setOptions(this, options)\n        this._visible = true\n        this.setData(malla)\n    }\n\n    /* eslint-disable no-unused-vars */\n    public abstract onDrawLayer(viewInfo: any): any\n    /* eslint-enable no-unused-vars */\n\n    protected get options() { return this._options }\n    protected set options(options) { this._options = options }\n\n    public getEvents(): any {\n        const events = super.getEvents()\n        return events\n    }\n\n    public onLayerDidMount() {\n        // this._enableIdentify()\n        this._ensureCanvasAlignment()\n    }\n\n    public isVisible() {\n        return this._visible\n    }\n\n    public setData(malla: Malla<T>) {\n        malla.setFilter(this.options.inFilter)\n        this._malla = malla\n        this.needRedraw()\n        this.fire('load')\n    }\n\n    public setFilter(f: any) {\n        this.options.inFilter = f\n        this._malla.setFilter(f)\n        this.needRedraw()\n    }\n\n    public needRedraw() {\n        if (this._map && this._malla) {\n            super.needRedraw()\n        }\n        return this\n    }\n\n    public setOpacity(opacity: number) {\n        this.options.opacity = opacity\n\n        if (this._canvas) {\n            this._updateOpacity()\n        }\n        return this\n    }\n\n    public getBounds(): LatLngBounds {\n        const bb = this._malla.extent()\n\n        const southWest = new LatLng(bb[1], bb[0])\n        const northEast = new LatLng(bb[3], bb[2])\n        const bounds = new LatLngBounds(southWest, northEast)\n        return bounds\n    }\n\n    protected show() {\n        this._visible = true\n        this._showCanvas()\n        // this._enableIdentify()\n    }\n\n    protected hide() {\n        this._visible = false\n        this._hideCanvas()\n        // this._disableIdentify()\n    }\n\n    protected _updateOpacity() {\n        DomUtil.setOpacity(this._canvas, this.options.opacity)\n    }\n\n    protected _showCanvas() {\n        if (this._canvas && this._visible) {\n            this._canvas.style.visibility = 'visible'\n        }\n    }\n\n    protected _getDrawingContext(): CanvasRenderingContext2D {\n        const g = this._canvas.getContext('2d')\n        g.clearRect(0, 0, this._canvas.width, this._canvas.height)\n        return g\n    }\n\n    protected _onClick(e: LeafletMouseEvent) {\n        const v = this._queryValue(e)\n        this.fire('click', v)\n    }\n\n    protected _onMouseMove(e: LeafletMouseEvent) {\n        const v = this._queryValue(e)\n        this._changeCursorOn(v)\n        this.fire('mousemove', v)\n    }\n\n    protected onLayerWillUnmount() {\n        // this._disableIdentify()\n    }\n\n    protected _hideCanvas() {\n        if (this._canvas) {\n            this._canvas.style.visibility = 'hidden'\n        }\n    }\n\n    private _ensureCanvasAlignment() {\n        const topLeft = this._map.containerPointToLayerPoint([0, 0])\n        DomUtil.setPosition(this._canvas, topLeft)\n    }\n\n    /*     _enableIdentify() {\n            //this._map.on('click', this._onClick, this)\n            //this._map.on('mousemove', this._onMouseMove, this)\n\n            this.options.onClick && this.on('click', this.options.onClick, this)\n            this.options.onMouseMove &&\n                this.on('mousemove', this.options.onMouseMove, this)\n        } */\n\n    /*     _disableIdentify() {\n        this._map.off('click', this._onClick, this)\n        this._map.off('mousemove', this._onMouseMove, this)\n\n        this.options.onClick && this.off('click', this.options.onClick, this)\n        this.options.onMouseMove &&\n            this.off('mousemove', this.options.onMouseMove, this)\n    } */\n\n    private _changeCursorOn(v: { latlng: LatLng, value: number | Vector }) {\n        if (!this.options.mouseMoveCursor) { return }\n\n        const { value, noValue } = this.options.mouseMoveCursor\n        const style = this._map.getContainer().style\n        style.cursor = v.value !== null ? value : noValue\n    }\n\n    private _queryValue(e: any): { latlng: LatLng, value: number | Vector } {\n        const v = this._malla\n            ? this._malla.valueAt(e.latlng.lng, e.latlng.lat)\n            : null\n        const result = {\n            latlng: e.latlng,\n            value: v\n        }\n        return result\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/layer/L.CanvasLayer.Malla.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"leaflet-canvas-layer\"\n// module id = 7\n// module chunks = 0","import './control/L.Control.ColorBar'\nimport './grid/Celda'\nimport './grid/Malla'\nimport './grid/MallaEscalar'\nimport './grid/MallaVectorial'\nimport './grid/Vector'\nimport './layer/L.CanvasLayer.MallaEscalar'\nimport './layer/L.CanvasLayer.MallaVectorial'\nimport './layer/L.CanvasLayer.PuntosMalla'\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/LeafletGrid.ts","/**\n *   Control for a simple legend with a colorbar\n *   References:\n *      - http://jsfiddle.net/ramnathv/g8stqcf6/\n *      - http://jsfiddle.net/vis4/cYLZH/\n */\nimport { Scale } from 'chroma-js'\nimport { range } from 'd3-array'\nimport { scaleLinear } from 'd3-scale'\nimport { EnterElement, select, Selection } from 'd3-selection'\nimport { Control, ControlOptions, DomEvent, DomUtil, Map, Util } from 'leaflet'\n\nexport interface IColorBarOptions extends ControlOptions {\n    background?: string,\n    decimals?: number,\n    height?: number,\n    labelFontSize?: number,\n    labels?: number[],\n    labelTextPosition?: string,\n    margin?: number,\n    steps?: number,\n    textColor?: string,\n    title?: string,\n    units?: string,\n    width?: number\n}\n\nexport class ColorBar extends Control {\n\n    public options: IColorBarOptions = {\n        background: '#fff',\n        decimals: 2,\n        height: 20,\n        labelFontSize: 12,\n        labels: [], // empty for no labels\n        labelTextPosition: 'middle', // start | middle | end\n        margin: 15,\n        position: 'bottomright',\n        steps: 100,\n        textColor: 'black',\n        title: 'Legend', // ej: Ocean Currents\n        units: 'uds', // ej: m/s\n        width: 300, // for colorbar itself (control is wider)\n    }\n\n    private _map: Map\n    private _range: number[]\n    private _color: Scale\n\n    constructor(color: Scale, rang: number[], options?: IColorBarOptions) {\n        super()\n        this._color = color // 'chromajs' scale function\n        this._range = rang // [min, max]\n        Util.setOptions(this, options)\n    }\n\n    public onAdd(map: Map) {\n        this._map = map\n        const div = DomUtil.create(\n            'div',\n            'leaflet-control-colorBar leaflet-bar leaflet-control'\n        )\n        div.style.padding = '10px'\n\n        DomEvent\n            .addListener(div, 'click', DomEvent.stopPropagation)\n            .addListener(div, 'click', DomEvent.preventDefault)\n        div.style.backgroundColor = this.options.background\n        div.style.cursor = 'pointer'\n        div.innerHTML = this.title() + this.palette()\n        return div\n    }\n\n    private title() {\n        const d = document.createElement('div')\n        select(d)\n            .append('span')\n            .style('color', this.options.textColor)\n            .style('display', 'block')\n            .style('margin-bottom', '5px')\n            .style('font-size', '15px')\n            .style('font-weight', 'bold')\n            .attr('class', 'leaflet-control-colorBar-title')\n            .text(this.options.title + ' (' + this.options.units + ')')\n        return d.innerHTML\n    }\n\n    private palette() {\n        const d = document.createElement('div')\n        const svg = this._createSvgIn(d)\n\n        this._appendColorBarTo(svg)\n\n        if (this.options.labels) {\n            this._appendLabelsTo(svg)\n        }\n\n        return d.innerHTML\n    }\n\n    private _createSvgIn(d: HTMLElement) {\n        const spaceForLabels = this.options.labels ? this.options.margin : 0\n        const svg = select(d)\n            .append('svg')\n            .attr('width', this.options.width + this.options.margin * 2)\n            .attr('height', this.options.height + spaceForLabels)\n        return svg\n    }\n\n    private _appendColorBarTo(svg: Selection<Element | EnterElement | Window | Document, {}, null, undefined>) {\n        const colorPerValue = this._getColorPerValue()\n        const w = this.options.width / colorPerValue.length\n\n        const groupBars = svg.append('g').attr('id', 'colorBar-buckets')\n        const buckets = groupBars\n            .selectAll('rect')\n            .data(colorPerValue)\n            .enter()\n            .append('rect')\n        buckets\n            .attr('x', (_d, i) => i * w + this.options.margin)\n            .attr('y', () => 0)\n            .attr('height', () => this.options.height /*w * 4*/)\n            .attr('width', () => w)\n            .attr('stroke-width', 2)\n            .attr('stroke-linecap', 'butt')\n            .attr('stroke', (d) => d.color.hex())\n            .attr('fill', (d) => d.color.hex())\n        buckets\n            .append('title')\n            .text(\n            (d) =>\n                `${d.value.toFixed(this.options.decimals)} ${this.options\n                    .units}`\n            )\n    }\n\n    private _appendLabelsTo(svg: Selection<Element | EnterElement | Window | Document, {}, null, undefined>) {\n        const positionPerLabelValue = this._getPositionPerLabelValue()\n        // const w = this.options.width / colorPerValue.length\n        const groupLabels = svg.append('g').attr('id', 'colorBar-labels')\n        const labels = groupLabels\n            .selectAll('text')\n            .data(positionPerLabelValue)\n            .enter()\n            .append('text')\n        labels\n            .attr('x', (d) => d.position + this.options.margin)\n            .attr('y', this.options.height + this.options.margin)\n            .attr('font-size', `${this.options.labelFontSize}px`)\n            .attr('text-anchor', this.options.labelTextPosition)\n            .attr('fill', this.options.textColor)\n            .attr('class', 'leaflet-control-colorBar-label')\n            .text((d) => `${d.value.toFixed(this.options.decimals)}`)\n    }\n\n    private _getColorPerValue() {\n        const [min, max] = this._range\n        const delta = (max - min) / this.options.steps\n        const data = range(min, max + delta, delta)\n        const colorPerValue = data.map((d) => {\n            return {\n                color: this._color(d),\n                value: d\n            }\n        })\n        return colorPerValue\n    }\n\n    private _getPositionPerLabelValue(): Array<{ value: number, position: number }> {\n        const xPositionFor = scaleLinear()\n            .range([0, this.options.width])\n            .domain(this._range)\n        const data = this.options.labels\n        const positionPerLabel = data.map((d: number) => {\n            return {\n                position: xPositionFor(d),\n                value: d\n            }\n        })\n        return positionPerLabel\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/control/L.Control.ColorBar.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3-scale\"\n// module id = 10\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3-selection\"\n// module id = 11\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"geotiff\"\n// module id = 12\n// module chunks = 0","import { max, min } from 'd3-array'\nimport { Celda } from './Celda'\nimport { IMallaParams, Malla } from './Malla'\nimport { MallaEscalar } from './MallaEscalar'\nimport { Vector } from './Vector'\n\nexport interface IMallaVectorialParams extends IMallaParams {\n    us: number[],\n    vs: number[]\n}\n\n/**\n *  A set of vectors assigned to a regular 2D-grid (lon-lat)\n *  (e.g. a raster representing winds for a region)\n */\nexport class MallaVectorial extends Malla<Vector> {\n\n    /* public static fromData(def: IMallaParams, datos: any): MallaVectorial {\n        let U = MallaEscalar.fromData(def, datos)\n        const p = MallaVectorial._paramsFromScalarFields(U, V)\n        return new MallaVectorial(p)\n    } */\n\n    public static fromMallas(U: MallaEscalar, V: MallaEscalar): MallaVectorial {\n        const p = MallaVectorial._paramsFromScalarFields(U, V)\n        return new MallaVectorial(p)\n    }\n\n    /**\n     * Creates a VectorField from the content of two ASCIIGrid files\n     * @param   {String} ascU - with u-component\n     * @param   {String} ascV - with v-component\n     * @returns {VectorField}\n     */\n    public static fromASCIIGrids(ascU: string, ascV: string, scaleFactor = 1): MallaVectorial {\n        const u = MallaEscalar.fromASCIIGrid(ascU, scaleFactor)\n        const v = MallaEscalar.fromASCIIGrid(ascV, scaleFactor)\n        const p = MallaVectorial._paramsFromScalarFields(u, v)\n        return new MallaVectorial(p)\n    }\n\n    /**\n     * Creates a VectorField from the content of two different Geotiff files\n     * @param   {ArrayBuffer} gtU - geotiff data with u-component (band 0)\n     * @param   {ArrayBuffer} gtV - geotiff data with v-component (band 0)\n     * @returns {VectorField}\n     */\n    public static fromGeoTIFFs(gtU: ArrayBuffer, gtV: ArrayBuffer): MallaVectorial {\n        const u = MallaEscalar.fromGeoTIFF(gtU)\n        const v = MallaEscalar.fromGeoTIFF(gtV)\n        const p = MallaVectorial._paramsFromScalarFields(u, v)\n\n        return new MallaVectorial(p)\n    }\n\n    /**\n     * Creates a VectorField from the content of Multiband Geotiff\n     * @param   {ArrayBuffer} geotiffData - multiband\n     * @param   {Array} bandIndexesForUV\n     * @returns {VectorField}\n     */\n    public static fromMultibandGeoTIFF(geotiffData: ArrayBuffer, bandIndexesForUV: number[] = [0, 1]): MallaVectorial {\n        const u = MallaEscalar.fromGeoTIFF(geotiffData, bandIndexesForUV[0])\n        const v = MallaEscalar.fromGeoTIFF(geotiffData, bandIndexesForUV[1])\n        const p = MallaVectorial._paramsFromScalarFields(u, v)\n\n        return new MallaVectorial(p)\n    }\n\n    /**\n     * Build parameters for VectorField, from 2 ScalarFields.\n     * No validation at all (nor interpolation) is applied, so u and v\n     * must be 'compatible' from the source\n     * @param   {ScalarField} u\n     * @param   {ScalarField} v\n     * @returns {Object} - parameters to build VectorField\n     */\n    public static _paramsFromScalarFields(u: MallaEscalar, v: MallaEscalar): IMallaVectorialParams {\n        return {\n            cellSize: u.cellSize,\n            nCols: u.nCols,\n            nRows: u.nRows,\n            us: u.zs,\n            vs: v.zs,\n            xllCorner: u.xllCorner,\n            yllCorner: u.yllCorner\n        }\n    }\n\n    protected grid: any[][]\n    protected _range: number[]\n    protected defMalla: any\n\n    private vs: any\n    private us: any\n\n    constructor(params: any) {\n        super(params)\n\n        this.us = params.us\n        this.vs = params.vs\n        this.grid = this._buildGrid()\n        this._range = this._calculateRange()\n    }\n\n    /**\n     * Get a derived field, from a computation on\n     * the VectorField\n     * @param   {String} type ['magnitude' | 'directionTo' | 'directionFrom']\n     * @returns {ScalarField}\n     */\n    public getScalarField(type: string) {\n        const f = this._getFunctionFor(type)\n        const p = {\n            cellSize: this.defMalla.cellSize,\n            nCols: this.defMalla.nCols,\n            nRows: this.defMalla.nRows,\n            xllCorner: this.defMalla.xllCorner,\n            yllCorner: this.defMalla.yllCorner,\n            zs: this._applyOnField(f)\n        }\n        return new MallaEscalar(p)\n    }\n\n    /**\n     * Builds a grid with a Vector at each point, from two arrays\n     * 'us' and 'vs' following x-ascending & y-descending order\n     * (same as in ASCIIGrid)\n     * @returns {Array.<Array.<Vector>>} - grid[row][column]--> Vector\n     */\n    protected _buildGrid(): Vector[][] {\n        const grid = this._arraysTo2d(this.us, this.vs, this.nRows, this.nCols)\n        return grid\n    }\n\n    /**\n     * Calculate min & max values (magnitude)\n     * @private\n     * @returns {Array}\n     */\n    protected _calculateRange(): number[] {\n        // TODO make a clearer method for getting these vectors...\n        let vectors = (this.getCells() as Array<Celda<Vector>>)\n            .map<Vector>((pt) => pt.value)\n            .filter((v: Vector) => v !== null)\n\n        if (this._inFilter) {\n            vectors = vectors.filter(this._inFilter)\n        }\n\n        // TODO check memory crash with high num of vectors!\n        const magnitudes: number[] = vectors.map<number>((v: Vector) => v.magnitude())\n        const _min = min(magnitudes)\n        const _max = max(magnitudes)\n\n        return [_min, _max]\n    }\n\n    /**\n     * Bilinear interpolation for Vector\n     * https://en.wikipedia.org/wiki/Bilinear_interpolation\n     * @param   {Number} x\n     * @param   {Number} y\n     * @param   {Number[]} g00\n     * @param   {Number[]} g10\n     * @param   {Number[]} g01\n     * @param   {Number[]} g11\n     * @returns {Vector}\n     */\n    protected _doInterpolation(x: number, y: number, g00: Vector, g10: Vector, g01: Vector, g11: Vector): Vector {\n        const rx = 1 - x\n        const ry = 1 - y\n        const a = rx * ry\n        const b = x * ry\n        const c = rx * y\n        const d = x * y\n        const u = g00.u * a + g10.u * b + g01.u * c + g11.u * d\n        const v = g00.v * a + g10.v * b + g01.v * c + g11.v * d\n        return new Vector(u, v)\n    }\n\n    private _getFunctionFor(type: string) {\n        return (u: number, v: number) => {\n            const uv = new Vector(u, v)\n            const fn: { [x: string]: () => number } = {\n                directionFrom: uv.directionFrom,\n                directionTo: uv.directionTo,\n                magnitude: uv.magnitude\n            }\n            return fn[type]() // magnitude, directionTo, directionFrom\n        }\n    }\n\n    private _applyOnField(func: (u: number, v: number) => number) {\n        const zs = []\n        const n = this.numCells()\n        for (let i = 0; i < n; i++) {\n            const u = this.us[i]\n            const v = this.vs[i]\n            if (this._isValid(u) && this._isValid(v)) {\n                zs.push(func(u, v))\n            } else {\n                zs.push(null)\n            }\n        }\n        return zs\n    }\n\n    private _arraysTo2d(us: any, vs: any, nRows: number, nCols: number) {\n        const grid = []\n        let p = 0\n\n        for (let j = 0; j < nRows; j++) {\n            const row = []\n            for (let i = 0; i < nCols; i++ , p++) {\n                const u = us[p]\n                const v = vs[p]\n                const valid = this._isValid(u) && this._isValid(v)\n                row[i] = valid ? new Vector(u, v) : null // <<<\n            }\n            grid[j] = row\n        }\n        return grid\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/grid/MallaVectorial.ts","import * as chroma from 'chroma-js'\nimport { Bounds, bounds, LatLng, LayerOptions, Util } from 'leaflet'\nimport { ColorScale } from '../colorscale/L.ColorScale'\nimport { Celda } from '../grid/Celda'\nimport { MallaEscalar } from '../grid/MallaEscalar'\nimport { CanvasLayerMalla } from './L.CanvasLayer.Malla'\nimport Scale = chroma.Scale\n\nexport interface ICanvasLayerMallaEscalarOptions extends LayerOptions {\n    arrowDirection?: string,\n    color?: string | Scale,\n    interpolate?: boolean,\n    type?: string,\n    vectorSize?: number\n}\n\n/**\n * ScalarField on canvas (a 'Raster')\n */\nexport class CanvasLayerMallaEscalar extends CanvasLayerMalla<number> {\n    protected _malla: MallaEscalar\n    protected _colorO: Scale = chroma.scale(ColorScale.scales('troposfera').colors).domain(this._malla.range)\n\n    protected _options: { [x: string]: any } = {\n        arrowDirection: 'from', // [from|towards]\n        color: this._colorO, // function colorFor(value) [e.g. chromajs.scale],\n        interpolate: true, // Change to use interpolation\n        type: 'colormap', // [colormap|vector]\n        vectorSize: 20 // only used if 'vector'\n    }\n\n    constructor(mallaEscalar: MallaEscalar, options?: ICanvasLayerMallaEscalarOptions) {\n        super(mallaEscalar, options)\n        Util.setOptions(this, options)\n    }\n\n    /* eslint-disable no-unused-vars */\n    public onDrawLayer() {\n        if (!this.isVisible()) { return }\n        this._updateOpacity()\n\n        const r = this._getRendererMethod()\n        // tslint:disable:no-console\n        console.time('onDrawLayer')\n        r()\n        console.timeEnd('onDrawLayer')\n    }\n    /* eslint-enable no-unused-vars */\n    public getColor(): Scale {\n        return this.options.color\n    }\n    public setColor(f: Scale) {\n        this.options.color = f\n        this.needRedraw()\n    }\n\n    public getEvents() {\n        const events = super.getEvents()\n        events.click = this._onClick\n        return events\n    }\n\n    protected _showCanvas() {\n        super._showCanvas()\n        this.needRedraw() // TODO check spurious redraw (e.g. hide/show without moving map)\n    }\n\n    private _defaultColorScale(): Scale {\n        return chroma.scale(['white', 'black']).domain(this._malla.range)\n    }\n\n    private _getRendererMethod() {\n        switch (this.options.type) {\n            case 'colormap':\n                return this._drawImage.bind(this)\n            case 'vector':\n                return this._drawArrows.bind(this)\n            default:\n                throw Error(`Unkwown renderer type: ${this.options.type}`)\n        }\n    }\n\n    private _ensureColor() {\n        if (this.options.color === null) {\n            this.setColor(this._defaultColorScale())\n        }\n    }\n\n    /**\n     * Draws the field in an ImageData and applying it with putImageData.\n     * Used as a reference: http://geoexamples.com/d3-raster-tools-docs/code_samples/raster-pixels-page.html\n     */\n    private _drawImage() {\n        this._ensureColor()\n\n        const ctx = this._getDrawingContext()\n        const width = this._canvas.width\n        const height = this._canvas.height\n\n        const img = ctx.createImageData(width, height)\n        const data = img.data\n\n        this._prepareImageIn(data, width, height)\n        ctx.putImageData(img, 0, 0)\n    }\n\n    /**\n     * Prepares the image in data, as array with RGBAs\n     * [R1, G1, B1, A1, R2, G2, B2, A2...]\n     * @private\n     * @param {[[Type]]} data   [[Description]]\n     * @param {Numver} width\n     * @param {Number} height\n     */\n    private _prepareImageIn(data: any, width: number, height: number) {\n        const step = 2\n        let z = 0\n        for (let j = 0; j < height; j += step) {\n            for (let i = 0; i < width; i += step) {\n                const pointCoords = this._map.containerPointToLatLng([i, j])\n                const lon = pointCoords.lng\n                const lat = pointCoords.lat\n\n                let v: number\n                this.options.interpolate\n                    ? v = this._malla.interpolatedValueAt(lon, lat)\n                    : v = this._malla.valueAt(lon, lat) // 'valueAt' | 'interpolatedValueAt'\n\n                if (v !== null) {\n                    z++\n                    const color = this._getColorFor(v)\n                    const [R, G, B, A] = color.rgba()\n                    for (let sx = 0; sx < step && sx + i < width; sx++) {\n                        for (let sy = 0; sy < step && j + sy < height; sy++) {\n                            const pos = ((j + sy) * width + i + sx) * 4\n                            data[pos] = R\n                            data[pos + 1] = G\n                            data[pos + 2] = B\n                            data[pos + 3] = (A * 255).toFixed(0) // not percent in alpha but hex 0-255\n                        }\n                    }\n                }\n                // pos = pos + 4\n            }\n        }\n    }\n\n    /**\n     * Draws the field as a set of arrows. Direction from 0 to 360 is assumed.\n     */\n    private _drawArrows() {\n        const pBounds = this._pixelBounds()\n        const pixelSize = (pBounds.max.x - pBounds.min.x) / this._malla.nCols\n\n        const stride = Math.max(\n            1,\n            Math.floor(1.2 * this.options.vectorSize / pixelSize)\n        )\n\n        const ctx = this._getDrawingContext()\n        ctx.strokeStyle = this.options.color\n\n        const currentBounds = this._map.getBounds()\n\n        for (let y = 0; y < this._malla.height; y = y + stride) {\n            for (let x = 0; x < this._malla.width; x = x + stride) {\n                // let rasterIndex = y * this.raster.width + x; // TODO check\n                const [lon, lat] = this._malla.lonLatAtIndexes(x, y)\n                const v = this._malla.valueAt(lon, lat)\n                const center = new LatLng(lat, lon)\n                if (v !== null && currentBounds.contains(center)) {\n                    const celda = new Celda(center, v, this._malla.cellSize)\n                    this._drawArrow(celda, ctx)\n                }\n            }\n        }\n    }\n\n    private _pixelBounds(): Bounds {\n        const _bounds = this.getBounds()\n        const northWest = this._map.latLngToContainerPoint(\n            _bounds.getNorthWest()\n        )\n        const southEast = this._map.latLngToContainerPoint(\n            _bounds.getSouthEast()\n        )\n        const pixelBounds = bounds(northWest, southEast)\n        return pixelBounds\n    }\n\n    private _drawArrow(celda: Celda<number>, ctx: CanvasRenderingContext2D) {\n        const projected = this._map.latLngToContainerPoint(celda.center)\n\n        // colormap vs. simple color\n        const color = this.options.color\n        if (typeof color === 'function') {\n            ctx.strokeStyle = color(celda.value)\n        }\n\n        const size = this.options.vectorSize\n        ctx.save()\n\n        ctx.translate(projected.x, projected.y)\n\n        let rotationRads = (90 + celda.value) * Math.PI / 180 // from, by default\n        if (this.options.arrowDirection === 'towards') {\n            rotationRads = rotationRads + Math.PI\n        }\n        ctx.rotate(rotationRads)\n\n        ctx.beginPath()\n        ctx.moveTo(-size / 2, 0)\n        ctx.lineTo(+size / 2, 0)\n        ctx.moveTo(size * 0.25, -size * 0.25)\n        ctx.lineTo(+size / 2, 0)\n        ctx.lineTo(size * 0.25, size * 0.25)\n        ctx.stroke()\n        ctx.restore()\n    }\n\n    /**\n     * Gets a chroma color for a pixel value, according to 'options.color'\n     */\n    private _getColorFor(v: any) {\n        let c = this.options.color // e.g. for a constant 'red'\n        if (typeof c === 'function') {\n            c = this.options.color(v)\n        }\n        const color = chroma(c) // to be more flexible, a chroma color object is always created || TODO improve efficiency\n        return color\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/layer/L.CanvasLayer.MallaEscalar.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chroma-js\"\n// module id = 15\n// module chunks = 0","/**\n * Based on:\n * http://github.com/santilland/plotty/blob/master/src/plotty.js and\n * http://geoexamples.com/d3-raster-tools-docs\n */\nimport { Class, Util } from 'leaflet'\n\nexport class ColorScale extends Class {\n\n    public static buildFullDefinition(defTemp: string | string[]) {\n        // Allows conversion from definition = ['color1', 'color2'...] to definition = {colors: ['color1', 'color2']}\n        let def: { colors: string[], positions?: number[] }\n        (Array.isArray(defTemp)) ? def.colors = defTemp : def = ColorScale.scales(defTemp)\n\n        // There are colors, but no positions (equally interval is assumed).\n        const number = def.colors.length\n        const delta = 1.0 / (number - 1)\n        const pos = []\n        let p = 0\n        do {\n            pos.push(p)\n            p = p + delta\n        } while (p <= 1.0)\n        def.positions = pos\n\n        return def\n    }\n\n    public static scales(name: string) {\n\n        // https://github.com/santilland/plotty/\n\n        /* eslint-disable max-len */\n        /* A colorScale definition is a set of 'colors' and optionally one position for each color,\n        in a gradient from 0 to 1 */\n        const scales: { [n: string]: { colors: string[], positions?: number[] } } = {\n            autumn: {\n                colors: ['#ff0000', '#ffff00'],\n                positions: [0, 1]\n            },\n            blackbody: {\n                colors: ['#000000', '#e60000', '#e6d200', '#ffffff', '#a0c8ff'],\n                positions: [0, 0.2, 0.4, 0.7, 1]\n            },\n            bluered: {\n                colors: ['#0000ff', '#ff0000'],\n                positions: [0, 1]\n            },\n            bone: {\n                colors: ['#000000', '#545474', '#a9c8c8', '#ffffff'],\n                positions: [0, 0.376, 0.753, 1]\n            },\n            cool: {\n                colors: ['#00ffff', '#ff00ff'],\n                positions: [0, 1]\n            },\n            copper: {\n                colors: ['#000000', '#ffa066', '#ffc77f'],\n                positions: [0, 0.804, 1]\n            },\n            earth: {\n                colors: ['#000082', '#00b4b4', '#28d228', '#e6e632', '#784614', '#ffffff'],\n                positions: [0, 0.1, 0.2, 0.4, 0.6, 1]\n            },\n            electric: {\n                colors: ['#000000', '#1e0064', '#780064', '#a05a00', '#e6c800', '#fffadc'],\n                positions: [0, 0.15, 0.4, 0.6, 0.8, 1]\n            },\n            greens: {\n                colors: ['#00441b', '#006d2c', '#238b45', '#41ab5d', '#74c476', '#a1d99b', '#c7e9c0', '#e5f5e0', '#f7fcf5'],\n                positions: [0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1]\n            },\n            greys: {\n                colors: ['#000000', '#ffffff'],\n                positions: [0, 1]\n            },\n            hot: {\n                colors: ['#000000', '#e60000', '#ffd200', '#ffffff'],\n                positions: [0, 0.3, 0.6, 1]\n            },\n            hsv: {\n                colors: ['#ff0000', '#fdff02', '#f7ff02', '#00fc04', '#00fc0a', '#01f9ff', '#0200fd', '#0800fd', '#ff00fb', '#ff00f5', '#ff0006'],\n                positions: [0, 0.169, 0.173, 0.337, 0.341, 0.506, 0.671, 0.675, 0.839, 0.843, 1]\n            },\n            jet: {\n                colors: ['#000083', '#003CAA', '#05FFFF', '#FFFF00', '#FA0000', '#800000'],\n                positions: [0, 0.125, 0.375, 0.625, 0.875, 1]\n            },\n            picnic: {\n                colors: ['#0000ff', '#3399ff', '#66ccff', '#99ccff', '#ccccff', '#ffffff', '#ffccff', '#ff99ff', '#ff66cc', '#ff6666', '#ff0000'],\n                positions: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]\n            },\n            portland: {\n                colors: ['#0c3383', '#0a88ba', '#f2d338', '#f28f38', '#d91e1e'],\n                positions: [0, 0.25, 0.5, 0.75, 1]\n            },\n            rainbow: {\n                colors: ['#96005A', '#0000C8', '#0019FF', '#0098FF', '#2CFF96', '#97FF00', '#FFEA00', '#FF6F00', '#FF0000'],\n                positions: [0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1]\n            },\n            rdbu: {\n                colors: ['#050aac', '#6a89f7', '#bebebe', '#dcaa84', '#e6915a', '#b20a1c'],\n                positions: [0, 0.35, 0.5, 0.6, 0.7, 1]\n            },\n            spring: {\n                colors: ['#ff00ff', '#ffff00'],\n                positions: [0, 1]\n            },\n            summer: {\n                colors: ['#008066', '#ffff66'],\n                positions: [0, 1]\n            },\n            troposfera: {\n                colors: ['rgb(128,128,128)',\n                    'rgb(79,9,207)',\n                    'rgb(8,55,206)',\n                    'rgb(8,184,216)',\n                    'rgb(14,234,138)',\n                    'rgb(20,229,9)',\n                    'rgb(139,214,8)',\n                    'rgb(248,193,26)',\n                    'rgb(243,56,19)',\n                    'rgb(219,9,103)'\n                ]\n            },\n            viridis: {\n                colors: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825']\n            },\n            winter: {\n                colors: ['#0000ff', '#00ff80'],\n                positions: [0, 1]\n            },\n            yignbu: {\n                colors: ['#081d58', '#253494', '#225ea8', '#1d91c0', '#41b6c4', '#7fcdbb', '#c7e9b4', '#edf8d9', '#ffffd9'],\n                positions: [0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1]\n            },\n            yiorrd: {\n                colors: ['#800026', '#bd0026', '#e31a1c', '#fc4e2a', '#fd8d3c', '#feb24c', '#fed976', '#ffeda0', '#ffffcc'],\n                positions: [0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1]\n            },\n        }\n        return scales[name.toLowerCase()]\n    }\n\n    public static rgbToHex(r: number, g: number, b: number) {\n        const rgb = [r, g, b]\n\n        function _componentToHex(c: number) {\n            const hex = c.toString(16)\n            return hex.length === 1 ? '0' + hex : hex\n        }\n\n        return '#' + rgb.map(_componentToHex).join('')\n    }\n\n    public static hexToRgb(hexWithPrefix: string) {\n        const hex = hexWithPrefix.slice(1)\n        const arrBuff = new ArrayBuffer(4)\n        const vw = new DataView(arrBuff)\n        vw.setUint32(0, parseInt(hex, 16), false)\n        const arrByte = new Uint8Array(arrBuff)\n\n        const r = arrByte[1]\n        const g = arrByte[2]\n        const b = arrByte[3]\n        return [r, g, b]\n    }\n\n    private canvas: any\n    private csImageData: any\n    private definition: any\n\n    private options: { [x: string]: any } = {\n        clampHigh: false,\n        clampLow: false,\n        domain: [0, 1],\n        height: 1, /* 1 is enough to get an array of colours */\n        width: 256, /* nº of steps = width */\n    }\n\n    constructor(definition: string | string[], options?: any) {\n        super()\n        Util.setOptions(this, options)\n\n        this.definition = ColorScale.buildFullDefinition(definition)\n        this._prepareScale()\n    }\n\n    public setDomain(d: number[]) {\n        this.options.domain = d\n        return this\n    }\n\n    public colorFor(value: number) {\n        const [min, max] = this.options.domain\n        const range = max - min\n\n        let c = Math.round((this.options.width - 1) * ((value - min) / range))\n\n        // clamp values?\n        let alpha = 255\n        if (c < 0) {\n            c = 0\n            if (!this.options.clampLow) {\n                alpha = 0\n            }\n        }\n\n        if (c > this.options.width - 1) {\n            c = this.options.width - 1\n            if (!this.options.clampHigh) {\n                alpha = 0\n            }\n        }\n\n        const A = alpha\n        const R = this.csImageData[c * 4]\n        const G = this.csImageData[c * 4 + 1]\n        const B = this.csImageData[c * 4 + 2]\n\n        return [R, G, B, A]\n    }\n\n    public flip() {\n        const newDefinition = { ...{}, ...this.definition }\n        newDefinition.colors = this.definition.colors.reverse() // << flip color order from original\n\n        const flipped = new ColorScale(newDefinition, this.options) // with same options\n        return flipped\n    }\n\n    private _prepareScale() {\n        const c = this._createCanvas()\n        const ctx = c.getContext('2d')\n        this._createGradientIn(ctx)\n\n        this.canvas = c\n        this.csImageData = ctx.getImageData(0, 0, this.options.width, 1).data\n    }\n\n    private _createCanvas() {\n        const c = document.createElement('canvas')\n        c.width = this.options.width\n        c.height = this.options.height\n        return c\n    }\n\n    private _createGradientIn(ctx: CanvasRenderingContext2D) {\n        const g = ctx.createLinearGradient(0, 0, this.options.width, 0)\n\n        // draw linear gradient with colors and stops from definition\n        const d = this.definition\n        for (let i = 0; i < d.colors.length; ++i) {\n            g.addColorStop(d.positions[i], d.colors[i])\n        }\n        ctx.fillStyle = g\n        ctx.fillRect(0, 0, this.options.width, this.options.height)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/colorscale/L.ColorScale.ts","\n/**\n * Animated VectorField on canvas\n */\nimport { interval, Timer } from 'd3-timer'\nimport { LatLng, LayerOptions, Util } from 'leaflet'\nimport { MallaVectorial } from '../grid/MallaVectorial'\nimport { Vector } from '../grid/Vector'\nimport { CanvasLayerMalla } from './L.CanvasLayer.Malla'\n\nexport class CanvasLayerMallaVectorial extends CanvasLayerMalla<Vector> {\n\n    protected _options = {\n        color: 'grey', // html-color | function colorFor(value) [e.g. chromajs.scale]\n        duration: 40, // milliseconds per 'frame'\n        fade: .97, // 0 to 1\n        maxAge: 200, // number of maximum frames per path\n        paths: 1000,\n        velocityScale: 0.0025,\n        width: 1.2, // number | function widthFor(value)\n    }\n\n    private timer: Timer\n\n    constructor(vectorField: MallaVectorial, options?: LayerOptions) {\n        super(vectorField, options)\n        Util.setOptions(this, options)\n        this.timer = null\n    }\n\n    public onDrawLayer(viewInfo: any) {\n        if (!this._malla || !this.isVisible()) { return }\n\n        this._updateOpacity()\n\n        const ctx = this._getDrawingContext()\n        const paths = this._prepareParticlePaths()\n\n        this.timer = interval(() => {\n            this._moveParticles(paths)\n            this._drawParticles(ctx, paths, viewInfo)\n        }, this.options.duration)\n    }\n\n    // De momento non se fai nada aquí\n    // onLayerDidMount() { super.onLayerDidMount(); }\n\n    protected onLayerWillUnmount() {\n        super.onLayerWillUnmount()\n        this._stopAnimation()\n    }\n\n    protected _hideCanvas() {\n        super._hideCanvas()\n        this._stopAnimation()\n    }\n\n    private _drawParticle(viewInfo: any, ctx: CanvasRenderingContext2D, par: any) {\n        const source = new LatLng(par.y, par.x)\n        const target = new LatLng(par.yt, par.xt)\n\n        if (\n            viewInfo.bounds.contains(source) &&\n            par.age <= this.options.maxAge\n        ) {\n            const pA = viewInfo.layer._map.latLngToContainerPoint(source)\n            const pB = viewInfo.layer._map.latLngToContainerPoint(target)\n\n            ctx.beginPath()\n            ctx.moveTo(pA.x, pA.y)\n            ctx.lineTo(pB.x, pB.y)\n\n            // next-step movement\n            par.x = par.xt\n            par.y = par.yt\n\n            // colormap vs. simple color\n            const color = this.options.color\n            if (typeof color === 'function') {\n                ctx.strokeStyle = color(par.m)\n            }\n\n            const width = this.options.width\n            if (typeof width === 'function') {\n                ctx.lineWidth = width(par.m)\n            }\n\n            ctx.stroke()\n        }\n    }\n\n    private _prepareParticlePaths() {\n        const paths = []\n\n        for (let i = 0; i < this.options.paths; i++) {\n            const p: { [x: string]: number } = this._malla.randomPosition()\n            p.age = this._randomAge()\n            paths.push(p)\n        }\n        return paths\n    }\n\n    private _randomAge() {\n        return Math.floor(Math.random() * this.options.maxAge)\n    }\n\n    /**\n     * Builds the paths, adding 'particles' on each animation step, considering\n     * their properties (age / position source > target)\n     */\n    private _moveParticles(paths: Array<{ [x: string]: number }>) {\n        // const screenFactor = 1 / this._map.getZoom() // consider using a 'screenFactor' to ponderate velocityScale\n        paths.forEach((par) => {\n            if (par.age > this.options.maxAge) {\n                // restart, on a random x,y\n                par.age = 0\n                this._malla.randomPosition(par)\n            }\n\n            const vector = this._malla.valueAt(par.x, par.y)\n            if (vector === null) {\n                par.age = this.options.maxAge\n            } else {\n                // the next point will be...\n                const xt = par.x + vector.u * this.options.velocityScale // * screenFactor\n                const yt = par.y + vector.v * this.options.velocityScale // * screenFactor\n\n                if (this._malla.hasValueAt(xt, yt)) {\n                    par.xt = xt\n                    par.yt = yt\n                    par.m = vector.magnitude()\n                } else {\n                    // not visible anymore...\n                    par.age = this.options.maxAge\n                }\n            }\n            par.age += 1\n        })\n    }\n\n    /**\n     * Draws the paths on each step\n     */\n    private _drawParticles(ctx: CanvasRenderingContext2D, paths: Array<{ [x: string]: number }>, viewInfo: any) {\n        // Previous paths...\n        const prev = ctx.globalCompositeOperation\n        ctx.globalCompositeOperation = 'destination-in'\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n        // ctx.globalCompositeOperation = 'source-over'\n        ctx.globalCompositeOperation = prev\n\n        // fading paths...\n        ctx.fillStyle = `rgba(0, 0, 0, ${this.options.fade})`\n        ctx.lineWidth = this.options.width\n        ctx.strokeStyle = this.options.color\n\n        // New paths\n        paths.forEach((par) => {\n            if (par.age < this.options.maxAge) { this._drawParticle(viewInfo, ctx, par) }\n        })\n    }\n\n    private _stopAnimation() {\n        if (this.timer) {\n            this.timer.stop()\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/layer/L.CanvasLayer.MallaVectorial.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3-timer\"\n// module id = 18\n// module chunks = 0","/**\n *  Simple layer with lon-lat points\n *\n *  TODO rename to SimplePoint?\n */\nimport { LatLng, LatLngBounds, LayerOptions } from 'leaflet'\nimport { CanvasLayer } from 'leaflet-canvas-layer'\n\nexport class CanvasLayerPuntosMalla extends CanvasLayer {\n    private points: any\n    private options = {\n        color: 'gray'\n    }\n\n    constructor(points: LatLng[], options?: LayerOptions) {\n        super(options)\n        this.points = points\n    }\n\n    public setData() {\n        this.needRedraw() // -- call to drawLayer\n    }\n\n    public onDrawLayer(viewInfo: any) {\n        // canvas preparation\n        const g = viewInfo.canvas.getContext('2d')\n        g.clearRect(0, 0, viewInfo.canvas.width, viewInfo.canvas.height)\n        g.fillStyle = this.options.color\n\n        for (const point of this.points) {\n            const p = viewInfo.layer._map.latLngToContainerPoint(point)\n            g.beginPath()\n            // g.arc(p.x, p.y, 1, 0, Math.PI * 2); // circle | TODO style 'function' as parameter?\n            g.fillRect(p.x, p.y, 2, 2) // simple point\n            g.fill()\n            g.closePath()\n            g.stroke()\n        }\n    }\n\n    public getBounds(): LatLngBounds {\n        // TODO: bounding with points...\n        const xs = this.points.map((pt: LatLng) => pt.lng)\n        const ys = this.points.map((pt: LatLng) => pt.lat)\n\n        const xmin = Math.min(...xs)\n        const ymin = Math.min(...ys)\n        const xmax = Math.max(...xs)\n        const ymax = Math.max(...ys)\n\n        const southWest = new LatLng(ymin, xmin)\n        const northEast = new LatLng(ymax, xmax)\n        const bounds = new LatLngBounds(southWest, northEast) // TODO FIX ERROR ? half-pixel?\n        return bounds\n    }\n\n    protected onLayerDidMount() {\n        // -- prepare custom drawing\n    }\n\n    protected onLayerWillUnmount() {\n        // -- custom cleanup\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/layer/L.CanvasLayer.PuntosMalla.ts"],"sourceRoot":""}